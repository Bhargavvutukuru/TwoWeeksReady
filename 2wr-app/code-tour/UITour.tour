{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "UITour",
  "steps": [
    {
      "file": "src/api/emergency-kit-api.js",
      "line": 3,
      "description": "## Api\r\n\r\nThe Api is necessary to call into the service tier (Azure Functions C# - see the api folder at the root).",
      "contents": "import baseApiInstance from './base-api-instance';\r\n\r\nconst emergencyKitApi = {\r\n    async getAll() {\r\n        return (await baseApiInstance.getInstance()).get('emergencykits');\r\n    },\r\n    async create(newKit) {\r\n        return (await baseApiInstance.getInstance()).post('emergencykits-add', newKit);\r\n    }\r\n}\r\n\r\nexport default emergencyKitApi;"
    },
    {
      "file": "src/store/index.js",
      "line": 18,
      "description": "## Store\r\n\r\nEach store is following a modular approach. Define each module in the store/modules folder. Remember to register it here.\r\n",
      "contents": "import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport emergencyKitStore from './modules/prepare/emergency-kits/emergency-kit-store';\r\nimport globalStore from './modules/global/global-store';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    // state: {\r\n\r\n    // },\r\n    // mutations: {\r\n\r\n    // },\r\n    // actions: {\r\n\r\n    // },\r\n    modules: {\r\n        globalStore,\r\n        emergencyKitStore\r\n    }\r\n})"
    },
    {
      "file": "src/store/modules/prepare/emergency-kits/emergency-kit-store.js",
      "line": 4,
      "description": "# Store Module\r\n\r\nThis is where you define each module, its state, mutations, and actions. Responsible for calling the API (/api folder), this will be where cache functionality is implemented.",
      "contents": "import emergencyKitApi from '../../../../api/emergency-kit-api';\r\nimport localForage from 'localforage';\r\n\r\nconst emergencyKitStore = {\r\n    namespaced: true,\r\n    state: {\r\n        list: [],\r\n        isSaving: false,\r\n        saveErrorMessage: null,\r\n        selectedKit: null\r\n    },\r\n    mutations: {\r\n        SET_LIST(state, payload) {\r\n            state.list = payload;\r\n        },\r\n        ADD_START(state) {\r\n            state.isSaving = true;\r\n            state.saveErrorMessage = null;\r\n        },\r\n        ADD_SUCCESS(state, payload) {\r\n            state.isSaving = false;\r\n            state.saveErrorMessage = null;\r\n            state.selectedKit = payload;\r\n        },\r\n        ADD_ERROR(state, payload) {\r\n            state.isSaving = false;\r\n            state.saveErrorMessage = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        async getEmergencyKitListAsync({commit, rootState}){\r\n            if(rootState.globalStore.online){\r\n                let response = await emergencyKitApi.getAll();\r\n                commit('SET_LIST', response.data);\r\n                await localForage.setItem('getEmergencyKitListAsync', response.data);\r\n            } else {\r\n                var data = await localForage.getItem('getEmergencyKitListAsync')\r\n                if(data){\r\n                    console.log(\"Serving from cache\");\r\n                    commit('SET_LIST', data);\r\n                } else {\r\n                    console.log(\"Offline without data\");\r\n                }\r\n                \r\n            }\r\n            \r\n        },\r\n        async createEmergencyKitAsync({commit, rootState}, newKit) {\r\n            if(rootState.globalStore.online){\r\n                try {\r\n                    commit('ADD_START');\r\n                    let response = await emergencyKitApi.create(newKit);\r\n                    commit('ADD_SUCCESS', response.data);\r\n                    return true;\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    commit('ADD_ERROR', 'Error creating emergency kit');\r\n                }\r\n                \r\n            }\r\n            else {\r\n                commit('ADD_ERROR', 'Kit could not be created because you are currently offline');\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default emergencyKitStore;"
    },
    {
      "file": "src/views/prepare/prepare.vue",
      "line": 6,
      "description": "## Prepare tab UI\r\n\r\nThis is the view for the Prepare tab in the application. It uses the prepare-landing component. Find components in the /components folder for implementation.",
      "contents": "<template>\r\n  <PrepareLanding></PrepareLanding>\r\n</template>\r\n\r\n<script>\r\nimport PrepareLanding from '@/components/prepare/prepare-landing.vue'\r\nexport default {\r\n  name: 'Prepare',\r\n  components: {\r\n    PrepareLanding\r\n  }\r\n}\r\n</script>"
    },
    {
      "file": "src/components/prepare/prepare-landing.vue",
      "line": 1,
      "description": "## Module Listing Component\r\n\r\nThis is the implementation of the prepare-landing vue, it is responsible for diplaying the list of modules available in the Prepare section. You can find 'prepare' related components in the /components/prepare/module-name folders.",
      "contents": "<template>\r\n  <v-container class=\"py-0\">\r\n    <v-app-bar app flat dense fixed>\r\n      <v-icon class=\"mr-2\">mdi-clipboard-list-outline</v-icon>\r\n      <v-toolbar-title>Prepare</v-toolbar-title>\r\n    </v-app-bar>\r\n\r\n    <v-row class=\"text-center\">\r\n      <v-col cols=\"12\">\r\n         <v-card color=\"cyan darken-3\" class=\"my-4\" ripple>\r\n            <v-card-title class=\"white--text\">\r\n              <v-icon color=\"white\" class=\"mr-2\">mdi-notebook-multiple</v-icon>\r\n              My Family Plan\r\n            </v-card-title>\r\n            <v-card-text class=\"text-left white--text\">\r\n              Make an actionable plan to share with friends and family. Know what to do in the event of a disaster.\r\n            </v-card-text>\r\n         </v-card>\r\n\r\n         <v-card to=\"/prepare/emergencykits\" color=\"deep-orange darken-4\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-medical-bag</v-icon>\r\n             Emergency Kits\r\n           </v-card-title>\r\n           <v-card-text align=\"left\" class=\"white--text\">\r\n             Create a grab-and-go kit so you have all that you need in the event of an emergency.\r\n           </v-card-text>\r\n         </v-card>\r\n         \r\n         <v-card color=\"yellow darken-4\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-shield-search</v-icon>\r\n             Hazard Hunt\r\n           </v-card-title>\r\n           <v-card-text align=\"left\" class=\"white--text\">\r\n             Observe your surroundings and identify common hazards that could mean danger in certain situations.\r\n           </v-card-text>\r\n         </v-card>\r\n         \r\n         <v-card color=\"teal darken-3\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-shield-alert-outline</v-icon>\r\n             Hazard Information\r\n           </v-card-title>\r\n           <v-card-text class=\"white--text\" align=\"left\">\r\n             Learn all about common hazards.\r\n           </v-card-text>\r\n         </v-card>\r\n         \r\n         <v-card color=\"blue-grey darken-1\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-human-greeting-proximity</v-icon>\r\n             Connect with the Community\r\n           </v-card-title>\r\n           <v-card-text class=\"white--text\" align=\"left\">\r\n             ShakeOut information\r\n           </v-card-text>\r\n         </v-card>\r\n\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'PrepareLanding',\r\n    data: () => ({}),\r\n  }\r\n</script>\r\n"
    },
    {
      "file": "src/components/prepare/prepare-landing.vue",
      "line": 20,
      "description": "## Link to module\r\n\r\nThe prepare-landing view lists modules as v-cards. Selecting a v-card will navigate into a module. This module routes to /prepare/emergencykits view routing to see what component it loads.",
      "contents": "<template>\r\n  <v-container class=\"py-0\">\r\n    <v-app-bar app flat dense fixed>\r\n      <v-icon class=\"mr-2\">mdi-clipboard-list-outline</v-icon>\r\n      <v-toolbar-title>Prepare</v-toolbar-title>\r\n    </v-app-bar>\r\n\r\n    <v-row class=\"text-center\">\r\n      <v-col cols=\"12\">\r\n         <v-card color=\"cyan darken-3\" class=\"my-4\" ripple>\r\n            <v-card-title class=\"white--text\">\r\n              <v-icon color=\"white\" class=\"mr-2\">mdi-notebook-multiple</v-icon>\r\n              My Family Plan\r\n            </v-card-title>\r\n            <v-card-text class=\"text-left white--text\">\r\n              Make an actionable plan to share with friends and family. Know what to do in the event of a disaster.\r\n            </v-card-text>\r\n         </v-card>\r\n\r\n         <v-card to=\"/prepare/emergencykits\" color=\"deep-orange darken-4\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-medical-bag</v-icon>\r\n             Emergency Kits\r\n           </v-card-title>\r\n           <v-card-text align=\"left\" class=\"white--text\">\r\n             Create a grab-and-go kit so you have all that you need in the event of an emergency.\r\n           </v-card-text>\r\n         </v-card>\r\n         \r\n         <v-card color=\"yellow darken-4\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-shield-search</v-icon>\r\n             Hazard Hunt\r\n           </v-card-title>\r\n           <v-card-text align=\"left\" class=\"white--text\">\r\n             Observe your surroundings and identify common hazards that could mean danger in certain situations.\r\n           </v-card-text>\r\n         </v-card>\r\n         \r\n         <v-card color=\"teal darken-3\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-shield-alert-outline</v-icon>\r\n             Hazard Information\r\n           </v-card-title>\r\n           <v-card-text class=\"white--text\" align=\"left\">\r\n             Learn all about common hazards.\r\n           </v-card-text>\r\n         </v-card>\r\n         \r\n         <v-card color=\"blue-grey darken-1\" class=\"my-4\" ripple>\r\n           <v-card-title class=\"white--text\">\r\n             <v-icon color=\"white\" class=\"mr-2\">mdi-human-greeting-proximity</v-icon>\r\n             Connect with the Community\r\n           </v-card-title>\r\n           <v-card-text class=\"white--text\" align=\"left\">\r\n             ShakeOut information\r\n           </v-card-text>\r\n         </v-card>\r\n\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'PrepareLanding',\r\n    data: () => ({}),\r\n  }\r\n</script>\r\n"
    },
    {
      "file": "src/router/index.js",
      "line": 23,
      "description": "# Routing to emergency kit list\r\n\r\n/prepare/emergencykits navigates to the EmergencyKitListing component, see /components/prepare/emergency-kits/emergency-kit-create.vue",
      "contents": "import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nimport Prepare from '../views/prepare/prepare.vue';\r\nimport EmergencyKitListing from '../views/prepare/emergency-kits/emergency-kit-listing.vue';\r\nimport EmergencyKitCreatePage from '../views/prepare/emergency-kits/emergency-kit-create.vue';\r\nimport Recent from '../views/recent/recent.vue';\r\nimport Settings from '../views/settings/settings.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n    {\r\n      path: '/',\r\n      redirect: '/prepare'\r\n    },\r\n    {\r\n      path: '/prepare',\r\n      name: 'prepare',\r\n      component: Prepare\r\n    },\r\n    {\r\n      path: '/prepare/emergencykits',\r\n      name: 'emergencykits',\r\n      component: EmergencyKitListing\r\n    },\r\n    {\r\n      path: '/prepare/emergencykits/create',\r\n      name: 'emergencykitcreate',\r\n      component: EmergencyKitCreatePage\r\n    },\r\n    {\r\n      path: '/recent',\r\n      name: 'recent',\r\n      component: Recent\r\n    },\r\n    {\r\n      path: '/settings',\r\n      name: 'settings',\r\n      component: Settings\r\n    },\r\n    {\r\n      path: '*',\r\n      redirect: '/prepare'\r\n    }\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes\r\n});\r\n\r\nexport default router;\r\n"
    },
    {
      "file": "src/components/prepare/emergency-kits/emergency-kit-list.vue",
      "line": 1,
      "description": "## Emergency Kits Listing Page\r\n\r\nLanding page of the emergency kits, responsible for rendering the listing kits created by the user, and as an entryway to create a new kit.",
      "contents": "<template>\r\n    <v-container class=\"py-0\">\r\n        <v-app-bar app flat dense fixed>\r\n          <v-icon class=\"mr-2\" v-on:click=\"goBack()\">mdi-arrow-left</v-icon>\r\n          <v-icon class=\"mr-2\">mdi-medical-bag</v-icon>\r\n          <v-toolbar-title>Emergency Kit List</v-toolbar-title>\r\n            <v-fab-transition>\r\n              <v-btn color=\"green\" dark absolute bottom right fab to=\"/prepare/emergencykits/create\">\r\n                <v-icon>mdi-plus</v-icon>\r\n              </v-btn>\r\n            </v-fab-transition>\r\n        </v-app-bar>\r\n        <v-data-iterator :items=\"listing\" disable-pagination disable-sort hide-default-footer\r\n          :search=\"search\">\r\n          <template v-slot:header>\r\n            <v-text-field\r\n              v-model=\"search\"\r\n              clearable             \r\n              label=\"Search\"\r\n              append-icon=\"mdi-magnify\">\r\n            </v-text-field>\r\n          </template>\r\n          <template v-slot:default=\"props\">\r\n            <v-card v-for=\"item in props.items\" :key=\"item.id\" :color=\"item.color\" class=\"my-4\" ripple>\r\n              <v-card-title class=\"white--text\">\r\n                <v-col class=\"col-9\">\r\n                  {{ item.name }}\r\n                </v-col>\r\n                <v-col class=\"text-right\">\r\n                  <v-icon class=\"mr-2 white--text\" @click=\"deleteKit(item.id)\">mdi-trash-can-outline</v-icon>\r\n                </v-col>\r\n              </v-card-title>\r\n            </v-card>\r\n          </template>\r\n        </v-data-iterator>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from 'vuex';\r\n\r\n  export default {\r\n    name: 'EmergencyKitList',\r\n    data: () => ({\r\n      search: '',\r\n      headers: [{\r\n          text: 'Kit name',\r\n          value: 'name'\r\n        }\r\n      ]      \r\n    }),\r\n    computed:  mapState({\r\n      listing: state => state.emergencyKitStore.list\r\n    }),\r\n    created() {\r\n      this.$store.dispatch('emergencyKitStore/getEmergencyKitListAsync');\r\n    },\r\n    methods: {\r\n      goBack() {\r\n         window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/');\r\n      },\r\n      deleteKit(id) {\r\n        var elementIndex = this.listing.map((e)=>{ return e.id;}).indexOf(id);\r\n        if(elementIndex != -1){\r\n          this.listing.splice(elementIndex, 1);\r\n        }        \r\n      }\r\n    }\r\n  }\r\n</script>"
    },
    {
      "file": "src/components/prepare/emergency-kits/emergency-kit-list.vue",
      "line": 42,
      "description": "## Implementation of the Emergency Kit List\r\n\r\nDefine the data, events, and methods that implement the Emergency Kit List",
      "contents": "<template>\r\n    <v-container class=\"py-0\">\r\n        <v-app-bar app flat dense fixed>\r\n          <v-icon class=\"mr-2\" v-on:click=\"goBack()\">mdi-arrow-left</v-icon>\r\n          <v-icon class=\"mr-2\">mdi-medical-bag</v-icon>\r\n          <v-toolbar-title>Emergency Kit List</v-toolbar-title>\r\n            <v-fab-transition>\r\n              <v-btn color=\"green\" dark absolute bottom right fab to=\"/prepare/emergencykits/create\">\r\n                <v-icon>mdi-plus</v-icon>\r\n              </v-btn>\r\n            </v-fab-transition>\r\n        </v-app-bar>\r\n        <v-data-iterator :items=\"listing\" disable-pagination disable-sort hide-default-footer\r\n          :search=\"search\">\r\n          <template v-slot:header>\r\n            <v-text-field\r\n              v-model=\"search\"\r\n              clearable             \r\n              label=\"Search\"\r\n              append-icon=\"mdi-magnify\">\r\n            </v-text-field>\r\n          </template>\r\n          <template v-slot:default=\"props\">\r\n            <v-card v-for=\"item in props.items\" :key=\"item.id\" :color=\"item.color\" class=\"my-4\" ripple>\r\n              <v-card-title class=\"white--text\">\r\n                <v-col class=\"col-9\">\r\n                  {{ item.name }}\r\n                </v-col>\r\n                <v-col class=\"text-right\">\r\n                  <v-icon class=\"mr-2 white--text\" @click=\"deleteKit(item.id)\">mdi-trash-can-outline</v-icon>\r\n                </v-col>\r\n              </v-card-title>\r\n            </v-card>\r\n          </template>\r\n        </v-data-iterator>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from 'vuex';\r\n\r\n  export default {\r\n    name: 'EmergencyKitList',\r\n    data: () => ({\r\n      search: '',\r\n      headers: [{\r\n          text: 'Kit name',\r\n          value: 'name'\r\n        }\r\n      ]      \r\n    }),\r\n    computed:  mapState({\r\n      listing: state => state.emergencyKitStore.list\r\n    }),\r\n    created() {\r\n      this.$store.dispatch('emergencyKitStore/getEmergencyKitListAsync');\r\n    },\r\n    methods: {\r\n      goBack() {\r\n         window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/');\r\n      },\r\n      deleteKit(id) {\r\n        var elementIndex = this.listing.map((e)=>{ return e.id;}).indexOf(id);\r\n        if(elementIndex != -1){\r\n          this.listing.splice(elementIndex, 1);\r\n        }        \r\n      }\r\n    }\r\n  }\r\n</script>"
    },
    {
      "file": "src/store/modules/prepare/emergency-kits/emergency-kit-store.js",
      "line": 31,
      "description": "## Retrieve emergency kit list\r\n\r\nThis method retrieves a list of emergency kits for the user using the API (/api/emergency-kit-api.js)",
      "selection": {
        "start": {
          "line": 31,
          "character": 15
        },
        "end": {
          "line": 31,
          "character": 39
        }
      },
      "contents": "import emergencyKitApi from '../../../../api/emergency-kit-api';\r\nimport localForage from 'localforage';\r\n\r\nconst emergencyKitStore = {\r\n    namespaced: true,\r\n    state: {\r\n        list: [],\r\n        isSaving: false,\r\n        saveErrorMessage: null,\r\n        selectedKit: null\r\n    },\r\n    mutations: {\r\n        SET_LIST(state, payload) {\r\n            state.list = payload;\r\n        },\r\n        ADD_START(state) {\r\n            state.isSaving = true;\r\n            state.saveErrorMessage = null;\r\n        },\r\n        ADD_SUCCESS(state, payload) {\r\n            state.isSaving = false;\r\n            state.saveErrorMessage = null;\r\n            state.selectedKit = payload;\r\n        },\r\n        ADD_ERROR(state, payload) {\r\n            state.isSaving = false;\r\n            state.saveErrorMessage = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        async getEmergencyKitListAsync({commit, rootState}){\r\n            if(rootState.globalStore.online){\r\n                let response = await emergencyKitApi.getAll();\r\n                commit('SET_LIST', response.data);\r\n                await localForage.setItem('getEmergencyKitListAsync', response.data);\r\n            } else {\r\n                var data = await localForage.getItem('getEmergencyKitListAsync')\r\n                if(data){\r\n                    console.log(\"Serving from cache\");\r\n                    commit('SET_LIST', data);\r\n                } else {\r\n                    console.log(\"Offline without data\");\r\n                }\r\n                \r\n            }\r\n            \r\n        },\r\n        async createEmergencyKitAsync({commit, rootState}, newKit) {\r\n            if(rootState.globalStore.online){\r\n                try {\r\n                    commit('ADD_START');\r\n                    let response = await emergencyKitApi.create(newKit);\r\n                    commit('ADD_SUCCESS', response.data);\r\n                    return true;\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    commit('ADD_ERROR', 'Error creating emergency kit');\r\n                }\r\n                \r\n            }\r\n            else {\r\n                commit('ADD_ERROR', 'Kit could not be created because you are currently offline');\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default emergencyKitStore;"
    },
    {
      "file": "src/components/prepare/emergency-kits/emergency-kit-list.vue",
      "line": 55,
      "description": "## On Created event\r\n\r\nOn creation of the view, retrieve list of emergency kits from the store by dispatching the emergencyKitStore/getEmergencyKitListAsync action. See /store/modules/prepare/emergency-kits",
      "contents": "<template>\r\n    <v-container class=\"py-0\">\r\n        <v-app-bar app flat dense fixed>\r\n          <v-icon class=\"mr-2\" v-on:click=\"goBack()\">mdi-arrow-left</v-icon>\r\n          <v-icon class=\"mr-2\">mdi-medical-bag</v-icon>\r\n          <v-toolbar-title>Emergency Kit List</v-toolbar-title>\r\n            <v-fab-transition>\r\n              <v-btn color=\"green\" dark absolute bottom right fab to=\"/prepare/emergencykits/create\">\r\n                <v-icon>mdi-plus</v-icon>\r\n              </v-btn>\r\n            </v-fab-transition>\r\n        </v-app-bar>\r\n        <v-data-iterator :items=\"listing\" disable-pagination disable-sort hide-default-footer\r\n          :search=\"search\">\r\n          <template v-slot:header>\r\n            <v-text-field\r\n              v-model=\"search\"\r\n              clearable             \r\n              label=\"Search\"\r\n              append-icon=\"mdi-magnify\">\r\n            </v-text-field>\r\n          </template>\r\n          <template v-slot:default=\"props\">\r\n            <v-card v-for=\"item in props.items\" :key=\"item.id\" :color=\"item.color\" class=\"my-4\" ripple>\r\n              <v-card-title class=\"white--text\">\r\n                <v-col class=\"col-9\">\r\n                  {{ item.name }}\r\n                </v-col>\r\n                <v-col class=\"text-right\">\r\n                  <v-icon class=\"mr-2 white--text\" @click=\"deleteKit(item.id)\">mdi-trash-can-outline</v-icon>\r\n                </v-col>\r\n              </v-card-title>\r\n            </v-card>\r\n          </template>\r\n        </v-data-iterator>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from 'vuex';\r\n\r\n  export default {\r\n    name: 'EmergencyKitList',\r\n    data: () => ({\r\n      search: '',\r\n      headers: [{\r\n          text: 'Kit name',\r\n          value: 'name'\r\n        }\r\n      ]      \r\n    }),\r\n    computed:  mapState({\r\n      listing: state => state.emergencyKitStore.list\r\n    }),\r\n    created() {\r\n      this.$store.dispatch('emergencyKitStore/getEmergencyKitListAsync');\r\n    },\r\n    methods: {\r\n      goBack() {\r\n         window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/');\r\n      },\r\n      deleteKit(id) {\r\n        var elementIndex = this.listing.map((e)=>{ return e.id;}).indexOf(id);\r\n        if(elementIndex != -1){\r\n          this.listing.splice(elementIndex, 1);\r\n        }        \r\n      }\r\n    }\r\n  }\r\n</script>"
    },
    {
      "file": "src/components/prepare/emergency-kits/emergency-kit-list.vue",
      "line": 8,
      "description": "## Create new kit button\r\n\r\nPressing this button routes to /prepare/emergencykits/create allows user to create a new kit",
      "contents": "<template>\r\n    <v-container class=\"py-0\">\r\n        <v-app-bar app flat dense fixed>\r\n          <v-icon class=\"mr-2\" v-on:click=\"goBack()\">mdi-arrow-left</v-icon>\r\n          <v-icon class=\"mr-2\">mdi-medical-bag</v-icon>\r\n          <v-toolbar-title>Emergency Kit List</v-toolbar-title>\r\n            <v-fab-transition>\r\n              <v-btn color=\"green\" dark absolute bottom right fab to=\"/prepare/emergencykits/create\">\r\n                <v-icon>mdi-plus</v-icon>\r\n              </v-btn>\r\n            </v-fab-transition>\r\n        </v-app-bar>\r\n        <v-data-iterator :items=\"listing\" disable-pagination disable-sort hide-default-footer\r\n          :search=\"search\">\r\n          <template v-slot:header>\r\n            <v-text-field\r\n              v-model=\"search\"\r\n              clearable             \r\n              label=\"Search\"\r\n              append-icon=\"mdi-magnify\">\r\n            </v-text-field>\r\n          </template>\r\n          <template v-slot:default=\"props\">\r\n            <v-card v-for=\"item in props.items\" :key=\"item.id\" :color=\"item.color\" class=\"my-4\" ripple>\r\n              <v-card-title class=\"white--text\">\r\n                <v-col class=\"col-9\">\r\n                  {{ item.name }}\r\n                </v-col>\r\n                <v-col class=\"text-right\">\r\n                  <v-icon class=\"mr-2 white--text\" @click=\"deleteKit(item.id)\">mdi-trash-can-outline</v-icon>\r\n                </v-col>\r\n              </v-card-title>\r\n            </v-card>\r\n          </template>\r\n        </v-data-iterator>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from 'vuex';\r\n\r\n  export default {\r\n    name: 'EmergencyKitList',\r\n    data: () => ({\r\n      search: '',\r\n      headers: [{\r\n          text: 'Kit name',\r\n          value: 'name'\r\n        }\r\n      ]      \r\n    }),\r\n    computed:  mapState({\r\n      listing: state => state.emergencyKitStore.list\r\n    }),\r\n    created() {\r\n      this.$store.dispatch('emergencyKitStore/getEmergencyKitListAsync');\r\n    },\r\n    methods: {\r\n      goBack() {\r\n         window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/');\r\n      },\r\n      deleteKit(id) {\r\n        var elementIndex = this.listing.map((e)=>{ return e.id;}).indexOf(id);\r\n        if(elementIndex != -1){\r\n          this.listing.splice(elementIndex, 1);\r\n        }        \r\n      }\r\n    }\r\n  }\r\n</script>"
    },
    {
      "file": "src/router/index.js",
      "line": 28,
      "description": "## Routing to create form\r\n\r\n/prepare/emergencykits/create routes to the EmergencyKitCreatePage component, see /components/prepare/emergency-kits/emergency-kit-create.vue",
      "contents": "import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nimport Prepare from '../views/prepare/prepare.vue';\r\nimport EmergencyKitListing from '../views/prepare/emergency-kits/emergency-kit-listing.vue';\r\nimport EmergencyKitCreatePage from '../views/prepare/emergency-kits/emergency-kit-create.vue';\r\nimport Recent from '../views/recent/recent.vue';\r\nimport Settings from '../views/settings/settings.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n    {\r\n      path: '/',\r\n      redirect: '/prepare'\r\n    },\r\n    {\r\n      path: '/prepare',\r\n      name: 'prepare',\r\n      component: Prepare\r\n    },\r\n    {\r\n      path: '/prepare/emergencykits',\r\n      name: 'emergencykits',\r\n      component: EmergencyKitListing\r\n    },\r\n    {\r\n      path: '/prepare/emergencykits/create',\r\n      name: 'emergencykitcreate',\r\n      component: EmergencyKitCreatePage\r\n    },\r\n    {\r\n      path: '/recent',\r\n      name: 'recent',\r\n      component: Recent\r\n    },\r\n    {\r\n      path: '/settings',\r\n      name: 'settings',\r\n      component: Settings\r\n    },\r\n    {\r\n      path: '*',\r\n      redirect: '/prepare'\r\n    }\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes\r\n});\r\n\r\nexport default router;\r\n"
    }
  ]
}
@page "/HazardInfos/{id}"
@attribute [Authorize(Roles = "admin")]

@inject IRepository repository
@inject IJSRuntime JS

@if (Hazard == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <h3>Details</h3>
    <form>
        <div class="form-group">
            <label for="name">Hazard Name</label>
            <input type="text" class="form-control" name="name" @bind="@Hazard.Name">
        </div>
        <div class="form-group">
            <label for="description">Short Description:</label>
            <textarea class="form-control" name="description" @bind="@Hazard.Description" rows="5"></textarea>
        </div>
        <div class="form-group">
            <label for="iconUrl">Icon Url</label>
            <input type="text" class="form-control" name="iconUrl" @bind="@Hazard.IconUrl">
        </div>
        <div class="form-group">
            <label for="mediaUrl">Media Url</label>
            <input type="text" class="form-control" name="mediaUrl" @bind="@Hazard.MediaUrl">
        </div>
        <button type="submit" class="btn btn-primary" @onclick="@Save">Submit</button>
    </form>
}

@code {

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public EventCallback OnSave { get; set; }

    private HazardInfo Hazard { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Hazard = await repository.GetHazardInfoById(Id);
    }


    public async Task Save()
    {
        Hazard = await repository.SaveHazardInfo(Hazard);
        //await OnSave.InvokeAsync(Hazard);

        await JS.InvokeVoidAsync("alert", new object[] { "Hazard Info Saved" });

    }
}
